const std = @import("std");
const suite = @import("suite.zig");
const params = @import("params.zig");
const io = @import("io.zig");
const detect = @import("detect.zig");

pub fn main() !void {
    var gpa = std.heap.GeneralPurposeAllocator(.{}){};
    const allocator = gpa.allocator(); // 注意这里是方法调用

    const data = &[_]u8{
        0xdf, 0x7f, 0xee, 0xc3, 0x3e, 0x59, 0x34, 0xcc,
        0xc3, 0x6e, 0x60, 0x25, 0x50, 0xa8, 0x14, 0x42,
        0xd6, 0x84, 0x87, 0x98, 0x99, 0x33, 0x62, 0xcf,
        0xc3, 0xca, 0x02, 0x7b, 0x30, 0x3f, 0xc3, 0xae,
        0xd0, 0xf9, 0x8f, 0x17, 0xdf, 0xb9, 0x08, 0xed,
        0x17, 0xad, 0x13, 0x41, 0x68, 0xe9, 0x9f, 0x4d,
        0x68, 0xb2, 0xbb, 0xdf, 0x6f, 0x45, 0x4c, 0x2b,
        0xd3, 0x6b, 0xc1, 0x9a, 0x11, 0x16, 0xb2, 0x0e,
        0x7f, 0x59, 0xf8, 0xe0, 0xb7, 0x02, 0x5b, 0x10,
        0xe8, 0x11, 0xd4, 0x27, 0x64, 0x44, 0x02, 0x31,
        0x6a, 0xf7, 0xb0, 0xe5, 0x43, 0xc3, 0xf9, 0xa8,
        0xd1, 0xa6, 0xab, 0x3d, 0x81, 0xd2, 0xad, 0x95,
        0x90, 0x32, 0x74, 0x8b, 0x0e, 0xcb, 0x9f, 0x2b,
        0x16, 0xa5, 0x7b, 0x93, 0xeb, 0xf1, 0x01, 0xd1,
        0xfe, 0xfd, 0x51, 0x60, 0xe3, 0x94, 0x6d, 0x54,
        0x2c, 0x13, 0x3e, 0xa3, 0x9a, 0x44, 0xd1, 0x58,
    };

    const byteStream = io.InputStream.fromMemory(data);
    var buffer: [16]u8 = [_]u8{0} ** 16;
    while (byteStream.read(&buffer) > 0) {
        std.debug.print("Read {d} bytes:\n", .{16});
        for (buffer[0..]) |b| {
            std.debug.print("{x:0>2}", .{b});
        }
        std.debug.print("\n", .{});
    }

    const input = io.BitInputStream.fromByteInputStream(byteStream);
   defer input.close();

    input.reset();

    const param = detect.DetectParam{
        .type = detect.DetectType.General, // 假设的检测类型
        .n = data.len * 8,
        .extra = null, // 可扩展更多参数
    };

    const detect_params = try params.parseArgs(allocator, std.os.argv);
    _ = detect_params; // 使用 detect_params 以避免未使用变量警告
    var detect_suite = try suite.DetectSuite.init(allocator);

    try detect_suite.registerAll(param);

    try detect_suite.runAll(&input);
}
